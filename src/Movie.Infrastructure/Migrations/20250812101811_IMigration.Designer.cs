// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie.Infrastructure;

#nullable disable

namespace Movie.Infrastructure.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    [Migration("20250812101811_IMigration")]
    partial class IMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movie.Domain.Entities.MoviesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Movie.Domain.Entities.MoviesEntity", b =>
                {
                    b.OwnsOne("Movie.Domain.ValueObjects.Category", "Category", b1 =>
                        {
                            b1.Property<Guid>("MoviesEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Category");

                            b1.HasKey("MoviesEntityId");

                            b1.ToTable("Movies");

                            b1.WithOwner()
                                .HasForeignKey("MoviesEntityId");
                        });

                    b.OwnsOne("Movie.Domain.ValueObjects.Description", "Description", b1 =>
                        {
                            b1.Property<Guid>("MoviesEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Description");

                            b1.HasKey("MoviesEntityId");

                            b1.ToTable("Movies");

                            b1.WithOwner()
                                .HasForeignKey("MoviesEntityId");
                        });

                    b.OwnsOne("Movie.Domain.ValueObjects.Title", "Title", b1 =>
                        {
                            b1.Property<Guid>("MoviesEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Title");

                            b1.HasKey("MoviesEntityId");

                            b1.ToTable("Movies");

                            b1.WithOwner()
                                .HasForeignKey("MoviesEntityId");
                        });

                    b.Navigation("Category")
                        .IsRequired();

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Title")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
